@model eBaySearch.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}
<div id="regHeading" class="text-center">
    <h2>Create a New Account</h2>
    <p>
        Use the form below to create a new account.
    </p>
    <p>
        Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
    </p>
</div>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
            <fieldset>
                <legend>Account Information</legend>
                <div calls="input-group register-group">
                    <div class="editor-label">
                        @Html.LabelFor(m => m.UserName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div calls="input-group register-group">
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Email)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </div>
                <div calls="input-group register-group">
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Password)
                    </div>
                    <div class="editor-field">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div calls="input-group register-group">
                    <div class="editor-label">
                        @Html.LabelFor(m => m.ConfirmPassword)
                    </div>
                    <div class="editor-field register-group">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </div>
                <p>
                    <input type="submit" id="registerBtn" value="Register" class="btn btn-primary" />
                </p>
            </fieldset>
        
    }
